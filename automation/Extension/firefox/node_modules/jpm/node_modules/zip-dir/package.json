{
  "name": "zip-dir",
  "version": "1.0.2",
  "description": "Zips up directories into buffers or saves zipped files to disk",
  "main": "index.js",
  "scripts": {
    "test": "./node_modules/.bin/mocha --reporter spec --ui bdd"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/jsantell/node-zip-dir"
  },
  "author": {
    "name": "Jordan Santell"
  },
  "devDependencies": {
    "mocha": "*",
    "chai": "*",
    "buffer-equal": "*",
    "unzip": "*",
    "fs-extra": "*"
  },
  "license": "MIT",
  "dependencies": {
    "jszip": "^2.4.0",
    "async": "^1.5.2"
  },
  "readme": "# zip-dir\n\nZips up a directory and saves the zip to disk or returns as a buffer.\n\n[![Build Status](http://img.shields.io/travis/jsantell/node-zip-dir.svg?style=flat-square)](https://travis-ci.org/jsantell/node-zip-dir)\n[![Build Status](http://img.shields.io/npm/v/zip-dir.svg?style=flat-square)](https://www.npmjs.org/package/zip-dir)\n\n## install\n\n```\n$ npm install zip-dir\n```\n\n## example\n\n```javascript\nvar zipdir = require('zip-dir');\n\nzipdir('/path/to/be/zipped', function (err, buffer) {\n  // `buffer` is the buffer of the zipped file\n});\n\nzipdir('/path/to/be/zipped', { saveTo: '~/myzip.zip' }, function (err, buffer) {\n  // `buffer` is the buffer of the zipped file\n  // And the buffer was saved to `~/myzip.zip`\n});\n\n// Use a filter option to prevent zipping other zip files!\n// Keep in mind you have to allow a directory to descend into!\nzipdir('/path/to/be/zipped', { filter: (path, stat) => !/\\.zip$/.test(path) }, function (err, buffer) {\n  \n});\n\n// Use an `each` option to call a function everytime a file is added, and receives the path\nzipdir('/path/to/be/zipped', { each: path => console.log(p, \"added!\"), function (err, buffer) {\n\n});\n  \n```\n\n## methods\n\n```\nvar zipdir = require('zip-dir');\n```\n\n### zipdir(dirPath, [options], callback)\n\nZips up `dirPath` recursively preserving directory structure and returns\nthe compressed buffer into `callback` on success. If `options` defined with a\n`saveTo` path, then the callback will be delayed until the buffer has also\nbeen saved to disk.\n\n#### Options\n\n* `saveTo` A path to save the buffer to.\n* `filter` A function that is called for all items to determine whether or not they should be added to the zip buffer. Function is called with the `fullPath` and a `stats` object ([fs.Stats](http://nodejs.org/api/fs.html#fs_class_fs_stats)). Return true to add the item; false otherwise. To include files within directories, directories must also pass this filter.\n* `each` A function that is called everytime a file or directory is added to the zip.\n\n## TODO\n\n* Add an option to not add empty directories if there are no valid children inside\n\n## license\n\nMIT\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jsantell/node-zip-dir/issues"
  },
  "_id": "zip-dir@1.0.2",
  "dist": {
    "shasum": "6d83cb87baed866ed65761f9e93a9230aba4a8c0"
  },
  "_from": "zip-dir@1.0.2",
  "_resolved": "https://registry.npmjs.org/zip-dir/-/zip-dir-1.0.2.tgz"
}
