{
  "name": "sign-addon",
  "version": "0.2.0",
  "description": "Signs a Firefox add-on using Mozilla's web service",
  "main": "dist/sign-addon.js",
  "scripts": {
    "build": "node -e \"require('grunt').cli()\" null build",
    "start": "node -e \"require('grunt').cli()\" null develop",
    "lint": "node -e \"require('grunt').cli()\" null lint",
    "test": "node -e \"require('grunt').cli()\" null test",
    "changelog": "conventional-changelog -p angular -u",
    "changelog-lint": "conventional-changelog-lint --from master"
  },
  "dependencies": {
    "babel-polyfill": "6.16.0",
    "deepcopy": "0.6.3",
    "es6-error": "4.0.0",
    "es6-promisify": "5.0.0",
    "jsonwebtoken": "7.1.9",
    "mz": "2.4.0",
    "request": "2.75.0",
    "source-map-support": "0.4.3",
    "stream-to-promise": "2.2.0",
    "when": "3.7.7"
  },
  "devDependencies": {
    "babel-core": "6.17.0",
    "babel-eslint": "7.0.0",
    "babel-loader": "6.2.5",
    "babel-plugin-transform-class-properties": "6.11.5",
    "babel-plugin-transform-es2015-modules-commonjs": "6.16.0",
    "babel-plugin-transform-flow-strip-types": "6.14.0",
    "babel-preset-es2015": "6.16.0",
    "babel-preset-stage-2": "6.17.0",
    "chai": "3.5.0",
    "conventional-changelog-cli": "1.2.0",
    "conventional-changelog-lint": "1.0.1",
    "eslint": "3.7.1",
    "grunt": "1.0.1",
    "grunt-contrib-clean": "1.0.0",
    "grunt-contrib-copy": "1.0.0",
    "grunt-contrib-watch": "1.0.0",
    "grunt-eslint": "19.0.0",
    "grunt-mocha-test": "0.13.1",
    "grunt-newer": "1.2.0",
    "grunt-webpack": "1.0.16",
    "load-grunt-configs": "1.0.0",
    "load-grunt-tasks": "3.5.2",
    "mocha": "3.1.0",
    "sinon": "1.17.6",
    "webpack": "1.13.2",
    "webpack-dev-server": "1.16.1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mozilla/sign-addon.git"
  },
  "author": {
    "name": "Kumar McMillan"
  },
  "license": "MPL-2.0",
  "bugs": {
    "url": "https://github.com/mozilla/sign-addon/issues"
  },
  "homepage": "https://github.com/mozilla/sign-addon#readme",
  "readme": "# Sign Add-on\n\nSign a Firefox add-on with Mozilla's\n[web service](http://addons-server.readthedocs.org/en/latest/topics/api/signing.html).\n\n[![Build Status](https://travis-ci.org/mozilla/sign-addon.svg?branch=master)](https://travis-ci.org/mozilla/sign-addon)\n\n## Installation\n\n    npm install sign-addon\n\n## Getting started\n\nTo sign add-ons, you first need to generate API credentials, a JWT issuer and\nsecret, from the\n[AMO Developer Hub](https://addons.mozilla.org/en-US/developers/addon/api/key/).\n\nCurrently, this is intended for use in [NodeJS](https://nodejs.org/) only\nand should work in 0.12 or higher.\n\n## Command line use\n\nTODO: add a command line script\n([issue #9](https://github.com/mozilla/sign-addon/issues/9)).\n\n## Programmatic use\n\nHere is how to retrieve a signed version of an\n[XPI file](https://developer.mozilla.org/en-US/docs/Mozilla/XPI):\n\n````javascript\nvar signAddon = require('sign-addon').default;\n\nsignAddon(\n  {\n    // Required arguments:\n\n    xpiPath: '/path/to/your/addon.xpi',\n    version: '0.0.1',\n    apiKey: 'Your JWT issuer',\n    apiSecret: 'Your JWT secret',\n\n    // Optional arguments:\n\n    // The explicit extension ID.\n    // WebExtensions do not require an ID.\n    // See the notes below about dealing with IDs.\n    id: 'your-addon-id@somewhere',\n    // Save downloaded files to this directory.\n    // Default: current working directory.\n    downloadDir: undefined,\n    // Number of milleseconds to wait before aborting the request.\n    // Default: 2 minutes.\n    timeout: undefined,\n    // Optional proxy to use for all API requests,\n    // such as \"http://yourproxy:6000\"\n    apiProxy: undefined,\n    // Optional object to pass to request() for additional configuration.\n    // Some properties such as 'url' cannot be defined here.\n    // Available options:\n    // https://github.com/request/request#requestoptions-callback\n    apiRequestConfig: undefined,\n    // Optional override to the number of seconds until the JWT token for\n    // the API request expires. This must match the expiration time that\n    // the API server accepts.\n    apiJwtExpiresIn: undefined,\n  })\n  .then(function(result) {\n    if (result.success) {\n      console.log(\"The following signed files were downloaded:\");\n      console.log(result.downloadedFiles);\n      console.log(\"Your extension ID is:\");\n      console.log(result.id);\n    } else {\n      console.error(\"Your add-on could not be signed!\");\n      console.error(\"Check the console for details.\");\n    }\n    console.log(result.success ? \"SUCCESS\" : \"FAIL\");\n  })\n  .catch(function(error) {\n    console.error(\"Signing error:\", error);\n  });\n````\n\nIn ES6 code, you can import it more concisely:\n\n````javascript\nimport signAddon from 'sign-addon';\n````\n\n## Dealing With Extension IDs\n\nHere are some notes about dealing with IDs when using `signAddon()`:\n\n- [WebExtensions](https://developer.mozilla.org/en-US/Add-ons/WebExtensions)\n  do not require you to pass `id` to `signAddon()`.\n  In this case, an ID will be auto-generated for you. It is accessible in\n  `signingResult.id`.\n- If a WebExtension's `manifest.json` already declares an ID, any `id`\n  you pass to `signAddon()` will have no effect!\n- To push an updated version to a WebExtension that had its ID auto-generated,\n  you need to pass in the original ID explicitly.\n- You must pass `id` to `signAddon()` for all other non-WebExtension add-ons.\n\n## Development\n\nHere's how to set up a development environment for the `sign-addon` package.\nInstall all requirements and run tests from the source:\n\n    npm install\n    npm start\n\n### Linking\n\nThe `sign-addon` module is meant to be used as a dependency.\nIf you need to test your local code inside another module,\nyou can link it.\n\nFirst, link it your npm system:\n\n    cd /path/to/sign-addon\n    npm link\n\nNext, change into the module you want to use it in, citing\n[web-ext](https://github.com/mozilla/web-ext) as an example,\nand link back to `sign-addon`:\n\n    cd /path/to/web-ext\n    npm link sign-addon\n\n`web-ext` will now use your local version of `sign-addon`.\n\n### Writing commit messages\n\nWe follow the Angular style of\n[semantic messages](https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit)\nwhen writing a commit message.\nThis allows us to auto-generate a changelog without too much noise in it.\nBe sure to write the commit message in past tense so it will read\nnaturally as a historic changelog.\n\nExamples:\n* `feat: Added a systematic dysfunctioner`\n* `fix: Fixed hang in systematic dysfunctioner`\n* `docs: Improved contributor docs`\n* `style: Added no-console linting, cleaned up code`\n* `refactor: Split out dysfunctioner for testability`\n* `perf: Systematic dysfunctioner is now 2x faster`\n* `test: Added more tests for systematic dysfunctioner`\n* `chore: Upgraded yargs to 3.x.x`\n\nIf you want to use scopes then it would look more like:\n`feat(dysfunctioner): Added --quiet option`.\n\nYou can check if the commit message on your branch is formatted correctly\nby running this:\n\n    npm run changelog-lint\n\n### Releasing\n\nTo create a new release, do the following:\n\n* Pull from master to make sure you're up to date.\n* Bump the version in `package.json`.\n* Commit and push the version change\n  (or create and merge a pull request for it).\n* Create a changelog by running `npm run changelog`.\n  This will output Markdown of all unreleased changes.\n* Create a [new release](https://github.com/mozilla/sign-addon/releases/new)\n  and paste in the changelog Markdown.\n  It may require some manual editing. For example, some commit messages\n  might have been truncated.\n  Title the github release after the new version you just\n  added in the previous commit to `package.json` (example: `1.0.4`).\n* When you publish the release, github creates a tag.\n  When TravisCI builds the tag,\n  it will automatically publish the package to\n  [npm](https://www.npmjs.com/package/sign-addon).\n",
  "readmeFilename": "README.md",
  "_id": "sign-addon@0.2.0",
  "dist": {
    "shasum": "08e443430ec2bb0da0b6b5d3c1f726652e8a170b"
  },
  "_from": "sign-addon@0.2.0",
  "_resolved": "https://registry.npmjs.org/sign-addon/-/sign-addon-0.2.0.tgz"
}
