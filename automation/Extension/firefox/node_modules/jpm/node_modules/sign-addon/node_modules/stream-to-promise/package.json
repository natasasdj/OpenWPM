{
  "name": "stream-to-promise",
  "version": "2.2.0",
  "description": "Convert streams (readable or writable) to promises",
  "main": "index.js",
  "scripts": {
    "test": "standard && mocha test.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/bendrucker/stream-to-promise.git"
  },
  "keywords": [
    "stream",
    "promise"
  ],
  "author": {
    "name": "Ben Drucker",
    "email": "bvdrucker@gmail.com",
    "url": "http://www.bendrucker.me"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/bendrucker/stream-to-promise/issues"
  },
  "homepage": "https://github.com/bendrucker/stream-to-promise",
  "dependencies": {
    "any-promise": "~1.3.0",
    "end-of-stream": "~1.1.0",
    "stream-to-array": "~2.3.0"
  },
  "devDependencies": {
    "bluebird": "~3.4.1",
    "chai": "^3.4.1",
    "chai-as-promised": "^5.1.0",
    "delayed-stream": "^1.0.0",
    "mocha": "^2.3.4",
    "rimraf": "^2.4.4",
    "standard": "^7.1.2"
  },
  "files": [
    "index.js"
  ],
  "readme": "stream-to-promise [![Build Status](https://travis-ci.org/bendrucker/stream-to-promise.svg)](https://travis-ci.org/bendrucker/stream-to-promise)\n=================\n\n> Convert streams (readable or writable) to promises\n\n## Installing\n\n```sh\n$ npm install --save[-dev] stream-to-promise\n```\n\n## Examples\n\n### Readable Streams\n\n```js\nstreamToPromise(readableStream).then(function (buffer) {\n  // buffer.length === 3\n})\nreadableStream.emit('data', new Buffer())\nreadableStream.emit('data', new Buffer())\nreadableStream.emit('data', new Buffer())\nreadableStream.emit('end') // promise is resolved here\n```\n\n### Writable Streams\n\n```js\nstreamToPromise(writableStream).then(function () {\n  // resolves undefined\n})\nwritableStream.write('data')\nwritableStream.end() // promise is resolved here\n```\n\n### Error Handling\n\n```js\nvar err = new Error()\nstreamToPromise(stream).catch(function (error) {\n  // error === err\n})\nstream.emit('error', err) // promise is rejected here\n```\n",
  "readmeFilename": "README.md",
  "_id": "stream-to-promise@2.2.0",
  "dist": {
    "shasum": "17fac3a6d6a7007b0abbea5076cd010908eb7cd7"
  },
  "_from": "stream-to-promise@2.2.0",
  "_resolved": "https://registry.npmjs.org/stream-to-promise/-/stream-to-promise-2.2.0.tgz"
}
