{
  "name": "es6-promisify",
  "version": "5.0.0",
  "description": "Converts callback-based functions to ES6 Promises",
  "main": "dist/promisify.js",
  "author": {
    "name": "Mike Hall",
    "email": "mikehall314@gmail.com"
  },
  "keywords": [
    "promises",
    "es6",
    "promisify"
  ],
  "license": "MIT",
  "dependencies": {
    "es6-promise": "^4.0.3"
  },
  "scripts": {
    "pretest": "./node_modules/eslint/bin/eslint.js ./lib/*.js ./tests/*.js",
    "test": "gulp && nodeunit tests"
  },
  "bugs": {
    "url": "http://github.com/digitaldesignlabs/es6-promisify/issues"
  },
  "files": [
    "dist/promisify.js",
    "dist/promise.js"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/digitaldesignlabs/es6-promisify.git"
  },
  "devDependencies": {
    "babel-preset-es2015": "^6.9.0",
    "eslint": "^2.13.1",
    "gulp": "^3.9.1",
    "gulp-babel": "^6.1.2",
    "nodeunit": "^0.10.0"
  },
  "greenkeeper": {
    "ignore": [
      "eslint"
    ]
  },
  "readme": "[![Travis CI](https://travis-ci.org/digitaldesignlabs/es6-promisify.svg)](https://travis-ci.org/digitaldesignlabs/es6-promisify)\n\n# es6-promisify\n\nConverts callback-based functions to Promise-based functions.\n\n## Install\n\nInstall with [npm](https://npmjs.org/package/es6-promisify)\n\n```bash\nnpm install --save es6-promisify\n```\n\n## Example\n\n```js\n\"use strict\";\n\n// Declare variables\nconst promisify = require(\"es6-promisify\");\nconst fs = require(\"fs\");\n\n// Convert the stat function\nconst stat = promisify(fs.stat);\n\n// Now usable as a promise!\nstat(\"example.txt\").then(function (stats) {\n    console.log(\"Got stats\", stats);\n}).catch(function (err) {\n    console.error(\"Yikes!\", err);\n});\n```\n\n## Promisify methods\n```js\n\"use strict\";\n\n// Declare variables\nconst promisify = require(\"es6-promisify\");\nconst redis = require(\"redis\").createClient(6379, \"localhost\");\n\n// Create a promise-based version of send_command\nconst client = promisify(redis.send_command, redis);\n\n// Send commands to redis and get a promise back\nclient(\"ping\").then(function (pong) {\n    console.log(\"Got\", pong);\n}).catch(function (err) {\n    console.error(\"Unexpected error\", err);\n}).then(function () {\n    redis.quit();\n});\n```\n\n## Handle callback multiple arguments\n```js\n\"use strict\";\n\n// Declare functions\nfunction test(cb) {\n    return cb(undefined, 1, 2, 3);\n}\n\n// Declare variables\nconst promisify = require(\"es6-promisify\");\n\n// Create promise-based version of test\nconst single = promisify(test);\nconst multi = promisify(test, {multiArgs: true});\n\n// Discards additional arguments\nsingle().then(function (result) {\n    console.log(result); // 1\n});\n\n// Returns all arguments as an array\nmulti().then(function (result) {\n    console.log(result); // [1, 2, 3]\n});\n```\n\n### Tests\nTest with nodeunit\n```bash\n$ npm test\n```\n\nPublished under the [MIT License](http://opensource.org/licenses/MIT).\n",
  "readmeFilename": "README.md",
  "_id": "es6-promisify@5.0.0",
  "dist": {
    "shasum": "728139eafa155096fdda3e55fa6be5b8d0a8f336"
  },
  "_from": "es6-promisify@5.0.0",
  "_resolved": "https://registry.npmjs.org/es6-promisify/-/es6-promisify-5.0.0.tgz"
}
